/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author ITSCH
 */
//Librerias necesarias para el cliente
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.Socket;


public class Cliente extends javax.swing.JFrame {
    static Socket s;
    static DataInputStream din;
    static DataOutputStream dout;


    /**
     * Creates new form NewJFrame
     */
    public Cliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 51));

        msg_area.setColumns(20);
        msg_area.setRows(5);
        jScrollPane1.setViewportView(msg_area);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Cliente cl=new Cliente();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
                try
        {
            s=new Socket("127.0.0.1",1201); //Direccion IP y puerto donde escucha el servidor
            din=new DataInputStream(s.getInputStream()); //Escucha la entrada de mensajes 
            dout=new DataOutputStream(s.getOutputStream());//Necesario para el envio de mensajes
            String msgin=""; //Cadena para almacenar el mensaje de entrada del servidor
            while(!msgin.equals("exit"))
            {
                msgin=din.readUTF(); //Lee el mensaje que llega del servidor
                
        String msgout= cl.prt2(msgin)+""; //Muestra el mensaje del cliente en la textArea
                        msg_area.setText(msg_area.getText()+"\n"+msgout);

            dout.writeUTF(msgout); //Envia el mensaje al servidor con el que esta conectado
            
         
            }
            
        }catch(Exception e){
                    System.out.println(e.getMessage());
            //Manejo de errores
        }
//Código dentro del botón de envío de mensajes cliente
// Codigo para enviar los mensajes al servidor
      
      

    }
String dg1="",dg2="",sl="";
    public int prt2(String a){
        
        int cnt=0;
        boolean b=false;
        for (int i = 0; i < a.length(); i++) {
            
            if(a.charAt(i)=='|'){
                cnt++;
            }else{
            switch(cnt){
                case 0:
                    dg1=dg1.concat(a.charAt(i)+""); 
                    break;
                case 1:
                       dg2=dg2.concat(a.charAt(i)+""); 
                    break;
                case 2:
                    sl=sl.concat(a.charAt(i)+""); 
                    break;
            }    
            }
        }
    
          int r=0, p1=Integer.parseInt(dg1),p2=Integer.parseInt(dg2);
        switch(sl){
            case "*":
                    r=p1*p2;
                     break;
                 case "/":
                     r=p1/p2;
                     break;
        }
        msg_area.setText(msg_area.getText()+"\n"+dg1+sl+dg2);
        dg1="";dg2="";sl="";
        return r; 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea msg_area;
    // End of variables declaration//GEN-END:variables
}
