
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ricky
 */
public class Servidor extends javax.swing.JFrame {

    /**
     * Creates new form ejecutar
     */
    public Servidor() {
        initComponents();
    }
    static ServerSocket ss;
    static Socket s;
    static DataInputStream din;
    static DataOutputStream dout;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 51));

        jLabel1.setText("Operacion");

        jTextField1.setText("(5+7)*4+(12/6)-1");

        jButton1.setText("Ejecutar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });

        jLabel2.setText("Resultado");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jLabel2))
                        .addGap(0, 180, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
       
        if (jTextField1.getText()=="") {
            jTextArea1.setText("Ingresa una operacion");
        }else{
            realizar();
            jTextArea1.setText(jTextArea1.getText()+"\n"+total+"");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         try
        {
            
            ss=new ServerSocket(1201);//Puerto del socket donde escuchara el servidor
            s=ss.accept(); //Aceptar la coneccion de los clientes
           
            din=new DataInputStream(s.getInputStream());
            dout=new DataOutputStream(s.getOutputStream());
            
          
            
        }catch(Exception e){
        	//Manejo de los errores
        }
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Servidor().setVisible(true);
            }
        });
    }
    String c="", d="";
    int total=0;
    public void realizar(){
        String a=jTextField1.getText()+"", b="";
        int prt=0;
        int i = 0;
        if (a.contains("(")) {
            while(a.contains("(")){
                 for ( i = 0; i < a.length(); i++) {
                     if (a.charAt(i)!='(') {
                         b=b.concat(a.charAt(i)+"");
                     }else{
                         i++;
                         while(a.charAt(i)!=')'){
                             d=d.concat(a.charAt(i)+"");
                             i++;
                             //aqui
                         }
                         i++;
                         c=d;
                         //System.out.println(c);
                         desarrollarc();
                         d=dg1;
                          b=b.concat(d);
                          d="";
                         for (i=i;  i < a.length(); i++) {
                             b=b.concat(a.charAt(i)+"");
                         }
                         a=b;
                         b="";
                     }
            }
                 
            }  
        }
        c=a;
        desarrollarc();
    }
    String sl="";
    String dg1="", dg2="";
     public void desarrollarc(){
         dg1="";
         String op="+-*/";
         boolean b=false;
         for (int i = 0; i < c.length(); i++) {
             if (c.charAt(i)==op.charAt(0)|c.charAt(i)==op.charAt(1)|c.charAt(i)==op.charAt(2)|c.charAt(i)==op.charAt(3)) {
                 if (b) {
                     switch(sl){
                 case "+":
                     dg1=prt1()+"";
                     break;
                 case "-":
                     dg1=prt1()+"";
                     break;
                 case "*":
                     dg1=prt2()+"";
                     break;
                 case "/":
                     dg1=prt2()+"";
                     break;
             }  
                     b=false;
                     dg2="";
                 }
                 
                 sl=c.charAt(i)+"";
                 b=true;
             }else{
                 if(b==false){
                     dg1=dg1.concat(c.charAt(i)+"");
                 }else{
                     dg2=dg2.concat(c.charAt(i)+"");
                 }
               
             }
         }
         if (b) {
                     switch(sl){
                 case "+":
                     dg1=prt1()+"";
                     break;
                 case "-":
                     dg1=prt1()+"";
                     break;
                 case "*":
                     dg1=prt2()+"";
                     break;
                 case "/":
                     dg1=prt2()+"";
                     break;
             }  
                     b=false;
                     dg2="";
                 }
         dg2="";
    }
    String p1="", p2="";
public int prt1(){
    jTextArea1.setText(jTextArea1.getText()+"\n"+dg1+""+sl+dg2);
    int r=0, p1=Integer.parseInt(dg1),p2=Integer.parseInt(dg2);
        switch(sl){
            case "+":
                    r=p1+p2;
                     break;
                 case "-":
                     r=p1-p2;
                     break;
        }
        total=r;
        jTextArea1.setText(jTextArea1.getText()+"\n"+total);
        return r;
    }
    
public int prt2(){
    int r=0;
    try
        {
            din=new DataInputStream(s.getInputStream());
            dout=new DataOutputStream(s.getOutputStream());
            String msgout="";
            msgout=dg1+"|"+dg2+"|"+sl+"";
            msgout=msgout.trim(); //Obtiene el mensaje de la caja de texto
            dout.writeUTF(msgout); //Envia el mensaje al cliente
         msgout="";
            String msgin=din.readUTF();
            r=Integer.parseInt(msgin);
        }catch(Exception e){
            System.out.println(e.getMessage());//Manejo de errores
        }
    
    
    
//          int r=0, p1=Integer.parseInt(dg1),p2=Integer.parseInt(dg2);
//        switch(sl){
//            case "*":
//                    r=p1*p2;
//                     break;
//                 case "/":
//                     r=p1/p2;
//                     break;
//        }
       total=r;
       return r; 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
